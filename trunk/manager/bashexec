#!/usr/bin/env bash
# Bash script to run a command and find it's return code
# and if it timed out. Additionally, it uses soapbox if it is around
# to make sure programs aren't messing about with security.

#Return Codes:
SUCCESS=0
CRASHED=1
TIMEDOUT=2
SOAPED=3

# Check if soapbox exists.
which soapbox > /dev/null
RET=$?
if [[ $RET == 0 ]]; then
    SOAPBOX="soapbox -s -f -l soapbox.log"
else 
    SOAPBOX="" 
fi


COMMAND="$SOAPBOX $*"
TIMEOUT=5 # how long to let a program run
OUTPUT="output.txt" #output file name
TIME=0 # starting time
INTERVAL=1 #interval to sleep for while waiting for a process to finish

# Run the command
$COMMAND&
PID=$!

# Start the timeout timer.
sleep $TIMEOUT && kill $PID 2> /dev/null&
# Wait for the process to end
wait $PID 2> /dev/null
RET=$?

#Check security on the program (perhaps it wasn't soapboxed properly)
if ( test -s soapbox.log ); then
    exit $SOAPED
fi

#Check for errors:
case $RET in 
    0)  # Successfully returned.
        exit $SUCCESS;;
    
    143) # Received a kill signal.
        exit $TIMEDOUT;;

    *) # Default Case 
        exit $CRASHED;;
esac
